1 *1
log(89)
log(89)
?read.table
test <- read.table('../data/mafic_dykes.csv', header=TRUE)
test <- read.table('../data/mafic_dykes.csv', header=TRUE, sep='\t')
View(test)
test <- read.table('../data/mafic_dykes.csv', header=TRUE, sep=',')
View(test)
read.table('../data/mafic_dykes.csv', header=TRUE, sep=',')
head(test)
kable
install.packages('knitr')
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
kable(initial_data[:5])
?kable
kable(initial_data[5:10,], digits=2)
installed.packages
installed.packages()
library(base64enc)
library(bit)
detach("package:bit", unload = TRUE)
detach("package:base64enc", unload = TRUE)
test <- read.table('../data/raw_data/mafic_dykes.csv', header=TRUE, sep=',')
test
test$Rock.Type
?unique
unique(test$Rock.Type)
rock_types = unique(test$Rock.Type)
sort()
sort(rock_types)
test
?filter
4 +
5
test
print('safsa')
print('something else')
print('something else \n')
print('something else \n as')
print('something else \n as')
print('something else /n as')
print('something else\nas')
cat('something else\nas')
log(10)
log10(10)
exp
exp(2)
sqrt(4)
4^2
View(test)
sm <- 50
View(test)
char_obj <- "hello"
char_obj2 <- "world!"
char_obj3 <- char_obj + char_obj2
char_obj
char_obj + char_obj2
length()
length
?length
c
?c
c(3, 4)
c(3, '333')
c(3.3, '333')
median()
?seq
seq(1, 20, 2)
rep
?rep
rep(10, times=22)
rep(10, times=220)
some_vec <- c(2, 3, 1, 6, 4, 3, 3, 7)
mean(some_vec)
my_vec <-  c(2, 3, 1, 6, 4, 3, 3, 7)
my_vec
my_vec[my_vec < 6 & my_vec > 2]
my_vec[(my_vec < 6) & (my_vec > 2)]
my_vec <- c(10, 40, 60, 80, 120)
my_vec % 2
my_vec % 2 == 2
my_vec / 2
my_vec / 2 == 2
my_vec / 2 == 10
my_vec %%
my_vec
my_vec[my_vec > 10]
unlink("readme_cache", recursive = TRUE)
my_vec
my_vec[my_vec > 10]
my_vec[my_vec > 10] <- 100
my_vec
order
?order
?sort
rock.types = c('basalt', 'andesite', 'dacite', 'anorthosite', 'dunite')
mgo.measured = c(8, 6, 2, 10, 12)
sort(mgo.measured)
rock.types[mgo.measured.asc]
mgo.measured.asc = sort(mgo.measured)
rock.types[mgo.measured.asc]
mgo.measured.asc = order(mgo.measured)
mgo.measured.asc
mgo.measured.asc = order(mgo.measured)
rock.types[mgo.measured.asc]
vec1 <- c(0, 1)
vec2 <- c(1, 2, 3, 4, 5)
vec1 + vec2
vec2 + vec1
help(mean)
soe <- c(0 , 4, 5, NA)
soe
mean(soe)
my_vec <- c(17, 15, 13, 19, 11, 0, NA)
mean(my_vec, na.rm = TRUE)
getwd()
read.table('./data/raw_data/mafic_dykes.csv', header=TRUE, sep=',')
getwd()
unlink('readme/day_1/readme_cache', recursive = TRUE)
knit_with_parameters('~/git-repositories/data-science-workshop-2022/readme/day_1/readme.Rmd')
knit_with_parameters('~/git-repositories/data-science-workshop-2022/readme/day_1/readme.Rmd')
test <- read.table('./data/raw_data/mafic_dykes.csv', header=TRUE, sep=',')
View(test)
View(test)
initial_data[initial_data$rock_type == 'basalt']
test[test$rock_type == 'basalt']
test[test$rock_type == 'basalt',]
test[test$rock_type != 'basalt',]
test[(test$rock_type == 'basalt') | (test$rock_type == 'diabase'),]
test[(test$rock_type == 'basalt') & (test$analysis_type == 'XRF'),]
?order
test[order(test$SiO2, decreasing = TRUE), ]
initial_data <- read.table('./data/raw_data/mafic_dykes.csv', header=TRUE, sep=',')
knitr::opts_chunk$set(echo = TRUE)
initial_data[order(initial_data$SiO2, initial_data$MgO), ]
initial_data[order(initial_data$SiO2, initial_data$MgO), ]
?xtfrm
?factor
factor(initial_data$rock_type)
factor(initial_data$rock_type, levels=c('basalt', 'andesite'))
factor(initial_data$rock_type, levels=c('basalt', 'andesite', ))
unique
unique(initial_data$rock_type)
factor(initial_data$analysis_type, levels=c('XRF', 'ICP'))
factor(initial_data$analysis_type, levels=c('ICP', 'XRF'))
initial_data$analysis_type <- factor(initial_data$analysis_type, levels=c('XRF', 'ICP'))
View(initial_data)
initial_data[order(initial_data$analysis_type),]
initial_data$analysis_type <- factor(initial_data$analysis_type, levels=c('ICP', 'XRF'))
initial_data[order(initial_data$analysis_type),]
initial_data
colnames(initial_data)
test <- data.frame(specimen = 1:3, location = c('Peterman', 'Barchan', 'Galindez'),
rock_type = 'basalt')
rbind(initial_data, test)
df1 <- data.frame(specimen = 1:3, location = c('Peterman', 'Barchan', 'Galindez'),
rock_type = 'basalt')
df1
df2 <- data.frame(specimen = 1:3, location = 'Forge Isl',
rock_type = 'andesite')
rbind(df1, df2)
df1 <- data.frame(specimen = 1:3, location = c('Peterman', 'Barchan', 'Galindez'),
rock_type = 'basalt')
df2 <- data.frame(location = 'Forge Isl')
cbind(df1, df2)
cbind(df1, df2)
df1 <- data.frame(specimen = 1:3, location = c('Peterman', 'Barchan', 'Galindez'),
rock_type = 'basalt')
df1 <- data.frame(specimen = 4:6, location = c('Peterman', 'Barchan', 'Galindez'),
rock_type = 'dacite')
merge(df1, df2)
?merge
merge(x=df1, y=df2)
View(initial_data)
df1 <- data.frame(specimen = 1:3, location = c('Peterman', 'Barchan', 'Galindez'),
rock_type = 'basalt')
df1 <- data.frame(specimen = 1:3, SiO2 = c(46, 47.5, 50.8),
lab = 'ACME')
merge(df1, df2)
df1 <- data.frame(specimen = 1:3, location = c('Peterman', 'Barchan', 'Galindez'),
rock_type = 'basalt')
df1 <- data.frame(specimen = 1:3, SiO2 = c(46, 47.5, 50.8),
lab = 'ACME')
merge(df1, df2)
df1 <- data.frame(specimen = 1:3, location = c('Peterman', 'Barchan', 'Galindez'),
rock_type = 'basalt')
df2 <- data.frame(Specimen = 1:3, SiO2 = c(46, 47.5, 50.8),
lab = 'ACME')
merge(df1, df2, by.x='specimen', by.y='Specimen')
merge(df1, df2)
list(rocks = c("basalt", "andesite", "dacite"),
is.altered = c(TRUE, TRUE, FALSE, TRUE, FALSE, FALSE),
measurements = matrix(1:6, nrow = 3))
test = list(rocks = c("basalt", "andesite", "dacite"),
is.altered = c(TRUE, TRUE, FALSE, TRUE, FALSE, FALSE),
measurements = matrix(1:6, nrow = 3))
test$rocks
?matrix
?array
array(1:5)
array(1:5, 3:5)
array(1:5, 2)
array(1:5, 2:5)
matrix(1:16, nrow = 4, byrow = TRUE)
matrix(1:40, nrow = 10, ncol=4, byrow = TRUE)
matrix(1:40, nrow = 10,byrow = TRUE)
matrix(1:40, nrow = 10, byrow = TRUE)
?append
data.frame(c('id'))
data.frame(id)
data.frame('id')
data.frame('id', 'some')
data.frame('id', 'some')
?data.frame
data.frame(c('id', 'some'))
data.frame(df='as')
data.frame(df=c())
data.frame(df=c(), some=c())
bool
data.frame(df=character())
?bool
?boolean
??boolean
?summary
summary(initial_data$MgO)
table(initial_data)
table(initial_data$analysis_type)
?count.fields
table(initial_data$analysis_type, initial_data$rock_type)
table(initial_data$analysis_type, initial_data$rock_type, initial_data$country_rocks)
?xtabs
xtabs(~initial_data)
xtabs(~initial_data$SiO2)
xtabs(~ SiO2 * MgO, initial_data)
xtabs(~ SiO2 * MgO, data = initial_data)
xtabs(~ SiO2 + MgO, data = initial_data)
xtabs(~ SiO2 + MgO, data = initial_data)
xtabs(~ analysis_type, data = initial_data)
xtabs(~ analysis_type, data = initial_data)
xtabs(~ analysis_type + SiO2, data = initial_data)
xtabs(~ analysis_type + rock_type, data = initial_data)
?tapply
tapply(initial_data$SiO2, initial_data$analysis_type, FUN=mean)
tapply(initial_data$SiO2, list(initial_data$analysis_type), FUN=mean)
tapply(initial_data$SiO2, list(initial_data$analysis_type, initial_data$rock_type), FUN=mean)
?summary
summary(initial_data)
summary(initial_data$TiO2)
?table
table(initial_data$analysis_type)
table(initial_data$analysis_type, initial_data$rock_type)
table(initial_data$analysis_type, initial_data$Na2O)
table(initial_data$analysis_type)
xtabs(~ analysis_type, data = initial_data)
?tapply
tapply(initial_data$SiO2, (initial_data$analysis_type, initial_data$rock_type), FUN=mean)
tapply(initial_data$SiO2, list(initial_data$analysis_type, initial_data$rock_type), FUN=mean)
tapply(initial_data$SiO2, list(initial_data$analysis_type, initial_data$rock_type), FUN=summary)
tapply(initial_data$SiO2, initial_data$analysis_type, FUN=summary)
aggregate(initial_data$SiO2, by = list(initial_data$rock_type), FUN = mean)
aggregate(initial_data$SiO2, by = list(rock_type = initial_data$rock_type), FUN = mean)
aggregate(list(SiO2 = initial_data$SiO2), by = list(rock_type = initial_data$rock_type), FUN = mean)
aggregate(list(SiO2 = initial_data$SiO2, TiO2 = initial_data$TiO2), by = list(rock_type = initial_data$rock_type), FUN = mean)
aggregate(list(SiO2 = initial_data$SiO2, TiO2 = initial_data$TiO2, K2O = initial_data$K2O), by = list(rock_type = initial_data$rock_type), FUN = mean)
export_data <- initial_data[,initial_data$rock_type in c('basalt')]
export_data <- initial_data[,initial_data$rock_type %in% c('basalt')]
export_data
initial_data[, initial_data$rock_type == 'basalt']
initial_data[initial_data$rock_type == 'basalt']
initial_data[initial_data$rock_type == 'basalt', ]
initial_data[initial_data$rock_type %in% c('basalt'), ]
initial_data[initial_data$rock_type %in% c('basalt', 'metadiabase'), ]
export_data <- initial_data[initial_data$rock_type %in% c('basalt', 'metadiabase'), ]
write.csv(export_data, file = 'data/export/basalt_metadiabase.csv', row.names = FALSE)
unlink('readme/day_2/readme_cache', recursive = TRUE)
knit_with_parameters('~/git-repositories/data-science-workshop-2022/readme/day_2/readme.Rmd')
library(tidyverse)
mpg
vignette("tibble")
vignette("ggplo2")
vignette("ggplot2")
vignette("ggplot")
vignette("dplyr")
?vignette
runif(1e3)
runif(10)
tibble(
id = seq(1:5),
rock_name = c("charnockite", "pyroxenite", "dunite", "volynite", "anorthosite"),
is.altered = c(TRUE, FALSE, FALSE, FALSE, FALSE),
)
data.frame(abc = 1, xyz = "a")
data.frame(abc = 1, xyz = "a")$abc
data.frame(abc = 1, xyz = "a")[["abc"]]
data.frame(abc = 1, xyz = "a")[[1]]
df = data.frame(
id = seq(1:5),
rock_name = c("charnockite", "pyroxenite", "dunite", "volynite", "anorthosite"),
is.altered = c(TRUE, FALSE, FALSE, FALSE, FALSE),
)
?data.frame
data.frame(
id = seq(1:5)
)
data.frame(
id = seq(1:5),
rock_name = c("charnockite", "pyroxenite", "dunite", "volynite", "anorthosite"),
is.altered = c(TRUE, FALSE, FALSE, FALSE, FALSE),
)
data.frame(
id = seq(1:5),
rock_name = c("charnockite", "pyroxenite", "dunite", "volynite", "anorthosite")
)
data.frame(
id = seq(1:5),
rock_name = c("charnockite", "pyroxenite", "dunite", "volynite", "anorthosite"),
is.altered = c(TRUE, FALSE, FALSE, FALSE, FALSE)
)
library(readr)
library(knitr)
readr::read_csv('./data/raw_data/mafic_dykes.csv', header=TRUE, sep=',')
?read_csv
readr::read_csv('./data/raw_data/mafic_dykes.csv', delim=',')
readr::read_csv('./data/raw_data/mafic_dykes.csv', col_names=TRUE)
parse_logical()
parse_logical("TRUE")
parse_logical("0")
parse_logical("0", "1")
parse_logical(c("0", "1"))
parse_logical(c("0", "135"))
seq(1:3)
paste(seq(1:3))
paste(seq(1:3), 'f')
paste0(seq(1:3), 'f')
paste0(seq(1:3), '.sample')
tibble(
id = paste0(seq(1:5), '.sample'),
mineral = c('magnetite', 'ilmenite', 'ilmenite', 'Cr-spinel', 'hercynite'),
lab = c('SAV, Banska Bystrica', 'Geological Institute, Bratislava', 'SAV, Banska Bystrica', 'SAV, Banska Bystrica', 'SAV, Banska Bystrica'),
...
)
tibble(
id = paste0(seq(1:5), '.sample'),
mineral = c('magnetite', 'ilmenite', 'ilmenite', 'Cr-spinel', 'hercynite'),
lab = c('SAV, Banska Bystrica', 'Geological Institute, Bratislava', 'SAV, Banska Bystrica', 'SAV, Banska Bystrica', 'SAV, Banska Bystrica')
)
tibble(
id = paste0(seq(1:5), '.sample'),
mineral = c('magnetite', 'ilmenite', 'ilmenite', 'Cr-spinel', 'hercynite'),
lab = c('SAV, Banska Bystrica', 'Geological Institute, Bratislava', 'SAV, Banska Bystrica', 'SAV, Banska Bystrica', 'SAV, Banska Bystrica'),
n_analyses = c(30, 119, 40, 20, 10)
)
c(c('magnetite', 'ilmenite', 'ilmenite', 'Cr-spinel'), 'hercynite')
c(list('magnetite', 'ilmenite', 'ilmenite', 'Cr-spinel'), 'hercynite')
30+50+
tibble(
city = c('Bratislava', 'Banska Bystrica'),
institution = c('SAV', 'Geological Institute'),
minerals = list(list('magnetite', 'ilmenite', 'ilmenite', 'Cr-spinel'), 'hercynite'),
n_analyses = c(119, 100)
)
knitr::opts_chunk$set(echo = TRUE)
tibble(
city = c('Bratislava', 'Banska Bystrica'),
institution = c('SAV', 'Geological Institute'),
minerals = list(list('magnetite', 'ilmenite', 'ilmenite', 'Cr-spinel'), list('hercynite')),
n_analyses = c(119, 100)
)
